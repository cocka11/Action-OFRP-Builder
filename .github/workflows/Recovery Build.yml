name: Build OrangeFox Recovery

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install -y git unzip bc bison build-essential curl flex g++-multilib gcc-multilib \
            libncurses5-dev libssl-dev libxml2 libxml2-utils lzop pngcrush rsync schedtool squashfs-tools \
            xsltproc zip zlib1g-dev python3 python3-pip python3-venv python3-dev

      - name: Set up repo tool
        run: |
          mkdir -p ~/bin
          curl https://storage.googleapis.com/git-repo-downloads/repo > ~/bin/repo
          chmod a+x ~/bin/repo
          echo "$HOME/bin" >> $GITHUB_PATH

      - name: Initialize OrangeFox source
        run: |
          mkdir -p ~/orangefox && cd ~/orangefox
          repo init -u https://github.com/hraj9258/orangefox_sync.git -b master
          repo sync -j$(nproc) --force-sync

      - name: Clone device tree
        run: |
          cd ~/orangefox
          git clone https://gitlab.com/OrangeFox/device/garnet.git device/xiaomi/garnet

      - name: Setup build environment
        run: |
          cd ~/orangefox
          source build/envsetup.sh
          export ALLOW_MISSING_DEPENDENCIES=true
          lunch twrp_garnet-eng

      - name: Build OrangeFox
        run: |
          cd ~/orangefox
          mka recoveryimage

      - name: Upload to GitHub Releases
        uses: ncipollo/release-action@v1
        with:
          artifacts: "~/orangefox/out/target/product/garnet/recovery.img"
          tag: "OrangeFox-garnet-$(date +%Y%m%d)"
          name: "OrangeFox Recovery for Garnet"
          body: "Automated build of OrangeFox recovery for the garnet device."
          draft: false
          prerelease: false
          token: ${{ secrets.GITHUB_TOKEN }}
